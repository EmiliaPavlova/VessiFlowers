@model PostViewModel
@{
    ViewBag.Title = "Блог";
    if (Model != null)
    {
        ViewBag.Title = string.Format("{0} > {1}", ViewBag.Title, Model.Title);
    }
}

<div id="content">

    <div class="row hidden-mobile">
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa-fw fa fa-picture-o"></i>
                @ViewBag.Title
            </h1>
        </div>

        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6 text-align-right">
            <div class="page-title">
                @using (Html.BeginForm("Remove", "Blog"))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.Id)
                    <input type="submit" class="btn btn-danger pull-right" value="Изтрии поста" />
                }
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-6">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Id)

                <div class="form-horizontal">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-xs-10">
                            @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control", rows = "14" } })
                            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @Html.ActionLink("Качи снимка", "AddOrUpdateImage", new { id = 0, pid = Model != null ? Model.Id : 0 }, new { @class = "btn btn-primary" })
                            <input type="submit" value="Запази" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- row -->
    <div class="row">
        <!-- SuperBox -->
        <div class="superbox col-sm-12">

            @if (Model != null)
            {
                foreach (var image in Model.Images)
                {
                    var thumbElements = image.Url.Split('/');
                    var thumbUrl = string.Format("/{0}/thumbs/{1}", thumbElements[1], thumbElements[2]);

                    <div class="superbox-list">
                        <img src="@thumbUrl" data-img="@thumbUrl" alt="@image.Id" title="@Model.Title" class="superbox-img">
                    </div>
                }
            }

            <div class="superbox-float"></div>
        </div>
        <!-- /SuperBox -->

        <div class="superbox-show" style="height:300px; display: none"></div>

    </div>

    <!-- end row -->

</div>
<!-- END MAIN CONTENT -->
@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->
    <script src="/scripts/plugin/superbox/superbox.js"></script>


    <script type="text/javascript">

    // DO NOT REMOVE : GLOBAL FUNCTIONS!

    $(document).ready(function () {

        $('.superbox').SuperBox({
            type: 'blog'
        });

    })

    </script>
}
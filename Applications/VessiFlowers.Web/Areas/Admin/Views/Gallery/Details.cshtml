@model GalleryViewModel
@{
    ViewBag.Title = "Галерия";
    if (Model != null)
    {
        ViewBag.Title = string.Format("{0} > {1} > {2}", ViewBag.Title, Model.GalleryTypeName, Model.Position);
    }
}

<div id="content">

    <div class="row hidden-mobile">
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa-fw fa fa-picture-o"></i>
                @ViewBag.Title
            </h1>
        </div>

        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6 text-align-right">
            <div class="page-title">
                @using (Html.BeginForm("Remove", "Gallery"))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.Id)
                    <input type="submit" class="btn btn-danger pull-right" value="Изтрии галерията" />
                }
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Id)

                <div class="form-horizontal">

                    <div class="form-group">
                        @Html.LabelFor(model => model.GalleryTypeId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.GalleryTypeId, (IEnumerable<SelectListItem>)ViewBag.GalleryTypes, "Моля изберете", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.GalleryTypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Position, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-xs-9">
                            @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <!-- widget grid -->
                            <section id="widget-grid" class="">

                                <!-- row -->
                                <div class="row">

                                    <!-- NEW WIDGET START -->
                                    <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

                                        <!-- Widget ID (each widget will need unique ID)-->
                                        <div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-togglebutton="false" data-widget-fullscreenbutton="false" data-widget-sortable="false" data-widget-deletebutton="false">
                                            <!-- widget options:
                                                usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                                                data-widget-colorbutton="false"
                                                data-widget-editbutton="false"
                                                data-widget-togglebutton="false"
                                                data-widget-deletebutton="false"
                                                data-widget-fullscreenbutton="false"
                                                data-widget-custombutton="false"
                                                data-widget-collapsed="true"
                                                data-widget-sortable="false"

                                            -->
                                            <!-- widget div-->
                                            <div>

                                                <!-- widget edit box -->
                                                <div class="jarviswidget-editbox">
                                                    <!-- This area used as dropdown edit box -->

                                                </div>
                                                <!-- end widget edit box -->
                                                <!-- widget content -->
                                                <div class="widget-body no-padding">

                                                    <div class="form-horizontal">

                                                        <div class="form-group">
                                                            <div class="col-md-12">
                                                                @Html.TextAreaFor(model => model.Content, new { @id = "ckeditor" })
                                                            </div>
                                                        </div>

                                                    </div>

                                                </div>
                                                <!-- end widget content -->

                                            </div>
                                            <!-- end widget div -->

                                        </div>
                                        <!-- end widget -->

                                    </article>
                                    <!-- WIDGET END -->

                                </div>

                                <!-- end row -->

                            </section>
                            <!-- end widget grid -->
                            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Duration, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Price, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @Html.ActionLink("Качи палитра", "AddOrUpdateImage", new { id = 0, gid = Model != null ? Model.Id : 0, isPalette = true }, new { @class = "btn btn-warning" })
                            @Html.ActionLink("Качи снимка", "AddOrUpdateImage", new { id = 0, gid = Model != null ? Model.Id : 0 }, new { @class = "btn btn-primary" })
                            <input type="submit" value="Запази" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- row -->
    <div class="row">
        <!-- SuperBox -->
        <div class="superbox col-sm-12">

            @if (Model != null)
            {
                foreach (var image in Model.Images)
                {
                    var thumbElements = image.Url.Split('/');
                    var thumbUrl = string.Format("/{0}/thumbs/{1}", thumbElements[1], thumbElements[2]);
                    var param = string.Format("{0}?isPalette={1}", image.Id, image.IsPalette.ToString());

                    <div class="superbox-list">
                        <img src="@thumbUrl" data-img="@thumbUrl" alt="@param" title="@Model.Title" class="superbox-img">
                    </div>
                }
            }

            <div class="superbox-float"></div>
        </div>
        <!-- /SuperBox -->

        <div class="superbox-show" style="height:300px; display: none"></div>

    </div>

    <!-- end row -->

</div>
<!-- END MAIN CONTENT -->
@section pagespecific {

    @Scripts.Render("~/bundles/jqueryval")

    <!-- PAGE RELATED PLUGIN(S) -->
    <script src="/scripts/plugin/superbox/superbox.js"></script>
    <script src="/scripts/plugin/ckeditor/ckeditor.js"></script>


    <script type="text/javascript">

        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

            $('.superbox').SuperBox({
                type: 'gallery'
            });

            CKEDITOR.replace('ckeditor', { height: '300px', startupFocus: true });

        })

    </script>
}